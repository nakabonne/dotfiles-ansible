
---
- name: Include APT package list
  include_vars: vars/apt.yml
  tags:
    - apt

- name: Include python package list
  include_vars: vars/pip.yml
  tags:
    - pip

- name: Include snap package list
  include_vars: vars/snap.yml
  tags:
    - snap

- name: Include brew taps list
  include_vars: vars/brew_taps.yml
  tags:
    - brew_taps

- name: Include brew formula list
  include_vars: vars/brew_formula.yml
  tags:
    - brew_formula

- block:
  - name: Update/Upgrade apt
    apt:
      update_cache: true
      upgrade: dist

  - name: Manage apt packages
    apt:
      name: "{{ item.key }}"
      state: "{{ item.value.state | default('latest') }}"
    with_dict: "{{apt}}"

  - name: Manage python packages
    pip:
      name: "{{ item.key }}"
      state: "{{ item.value.state | default('latest') }}"
      executable: "{{ item.value.executable | default('pip3') }}"
    with_dict: "{{pip}}"
    tags:
      - pip

  - name: Manage snap packages
    snap:
      name: "{{ item.key }}"
      classic: "{{ item.value.classic | default('no') }}"
    with_dict: "{{snap}}"
    tags:
      - snap

  become: true
  when: ansible_os_family == "Debian"
  tags: apt

- block:
  - name: Update/Upgrade Homebrew
    homebrew:
      update_homebrew: true
      upgrade_all: true
    tags:
      - brew_taps
      - brew_formula
      - brew_cask

  - name: Manage taps
    homebrew_tap:
      name: "{{ item.key }}"
      state: "{{ item.value.state | default('present') }}"
    with_dict: "{{taps}}"
    tags:
      - brew_taps

  - name: Manage formula
    homebrew:
      name: "{{ item.key }}"
      install_options: "{{ item.value.options | default(omit) }}"
      state: "{{ item.value.state | default('present') }}"
    with_dict: "{{formula}}"
    tags:
      - brew_formula

  - name: Manage casks
    homebrew_cask:
      name: "{{ item.key }}"
      state: "{{ item.value.state | default('present') }}"
    with_dict: "{{casks}}"
    tags:
      - brew_cask

  - name: Manage python packages
    pip:
      name: "{{ item.key }}"
      state: "{{ item.value.state | default('latest') }}"
      executable: "{{ item.value.executable | default('pip') }}"
    with_dict: "{{pip}}"
    tags:
      - pip

  when: ansible_os_family == "Darwin"
